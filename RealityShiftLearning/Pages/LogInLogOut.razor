@page "/loginlogout"
@using System.Security.Claims
@inject AuthenticationStateProvider AuthenticationStateProvider



<h3>LogInLogOut</h3>

<AuthorizeView>
    <Authorized>

        <h1>Hello, @context.User.Identity.Name!</h1>
        <form method="post" action="controller/auth?returnUrl=%2Floginlogout">
            <Button HtmlType="submit">Logout</Button>
        </form>
        @*@foreach (var claim in (context?.User?.Claims ?? new Claim[0]))
        {
            <p>@claim.Type : @claim.Value</p>
        }*@
        @*<Avatar Src="@context.User.Claims.FirstOrDefault(c => c.Type == "urn:github:avatar").Value"></Avatar>*@
    </Authorized>
    <NotAuthorized>
        <p>Not authorized </p>


        <form id="external-account" action="/Identity/Account/ExternalLogin?returnUrl=%2Floginlogout" method="post" class="form-horizontal">
            <div>
                <p>
                    <button type="submit" class="btn btn-primary" name="provider" value="GitHub">Login via GitHub</button>
                </p>
            </div>
        </form>
    </NotAuthorized>
</AuthorizeView>
@code {
}
