@page "/test/page/1"
@inject NavigationManager NavigationManager

<div class="mv-test-header">
    Which time management techniques are you familiar with?
</div>

@foreach(var option in options.Select((option, index) => (option, index)))
{
    <Row Class="@(option.index % 2 == 0 ? "covered" : null)">
        <Checkbox Class="mv-test-ant-checkbox" Value="@result[option.option.Label]" CheckedChange="@(() => result[option.option.Label] = !result[option.option.Label])">@option.option.Value</Checkbox>
    </Row>
}

<div class="mw-bottom">
    <Button Type="primary" Size="large" class="mw-test-button" @onclick="NextPart">Next</Button>
    <div style="opacity: 0.66;">See more techniques</div>
</div>

<style>
    .covered {
        background-color: rgba(160, 178, 216, 0.7);
    }

    .ant-row {
        border-bottom: 1px solid #fff;
        border-top: 1px solid #fff;
    }

    .mv-test-header {
        margin: 0 auto;
        padding: 15vh 0 5vh;
        font-size: 24px;
        text-align: center;
        max-width: 285px;
    }

    .mv-test-ant-checkbox {
        width: 100%;
        font-size: 18px !important;
        font-weight: 600;
        margin: 1vh 0 1vh 20%;
    }

    .ant-checkbox-wrapper + .ant-checkbox-wrapper {
        margin-left: 0;
    }

    .mw-bottom {
        position: absolute;
        bottom: 0;
        height: 120px;
        width: 100vw;
        text-align: center;
    }

    .mw-test-button {
        padding: 0px 20px;
        margin: 0 0 15px;
        font-size: 18px !important;
        font-weight: 600;
    }

    .mv-test-checkboxgroup {
        display: grid
    }

        .mv-test-checkboxgroup span:first-child {
            margin-right: 30px;
        }
</style>

@code {
    Dictionary<string, bool> result = new Dictionary<string, bool>();

    CheckboxOption[] options = new CheckboxOption[]
    {
        new CheckboxOption { Label = "tomato", Value = "Tomato" },
        new CheckboxOption { Label = "10min", Value = "10 minutes" },
        new CheckboxOption { Label = "frog", Value = "Eat a frog" },
        new CheckboxOption { Label = "getting_done", Value = "Getting Things Done" },
        new CheckboxOption { Label = "none", Value = "None" }
        };

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();
        result.Add("tomato", false);
        result.Add("10min", false);
        result.Add("frog", false);
        result.Add("getting_done", false);
        result.Add("none", false);
    }

    protected void NextPart()
    {
        foreach (var o in result)
        {
            if (o.Value)
            {
                Console.WriteLine(o.Key);
            }
        }
        NavigationManager.NavigateTo("/test/page/2");
    }
}
